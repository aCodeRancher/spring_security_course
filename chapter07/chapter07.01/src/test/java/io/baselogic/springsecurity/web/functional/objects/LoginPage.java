package io.baselogic.springsecurity.web.functional.objects;


import io.baselogic.springsecurity.domain.AppUser;
import lombok.Data;
import lombok.extern.slf4j.Slf4j;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.PageFactory;

/**
 *
 * See https://docs.spring.io/spring-framework/docs/current/spring-framework-reference/testing.html#spring-mvc-test-server-htmlunit-webdriver-why
 */
// Lombok Annotations:
@Data
@Slf4j
public class LoginPage {

//    static String URL = "https://localhost:8443/login/form";
    static String URL = "http://localhost:8080/login/form";

    private WebDriver driver;

    //-----------------------------------------------------------------------//
    // Standard Page Elements
    @FindBy(id = "pageTitle")
    private WebElement pageTitle;


    @FindBy(id = "chapterHeading")
    private WebElement chapterHeading;

    @FindBy(id = "summary")
    private WebElement summary;

    //-----------------------------------------------------------------------//
    // Page Specific Elements:

    @FindBy(id = "username")
    private WebElement username;

    @FindBy(id = "password")
    private WebElement password;

    @FindBy(id = "submit")
    private WebElement submit;

    //-----------------------------------------------------------------------//

    public LoginPage() {
        log.info("*************************************************************");
        log.info("public LoginPage()");
        log.info("*************************************************************");
    }

    public LoginPage(WebDriver driver) {
        log.info("*************************************************************");
        log.info("public LoginPage(WebDriver driver)");
        log.info("*************************************************************");
        this.driver = driver;
    }


    //-----------------------------------------------------------------------//

    //@Override
    public <T> T formLogin(final AppUser user) {
        log.info("*************************************************************");
        username.clear();
        username.sendKeys(user.getEmail());
        password.clear();
        password.sendKeys(user.getPassword());
        log.info("username: {}", user.getEmail());
        log.info("password: {}", user.getPassword());

        submit.submit();

        currentLocation();

        IndexPage indexPage = PageFactory.initElements(driver, IndexPage.class);
        indexPage.setUserAuthenticated(true);

        return (T) indexPage;
    }

    //@Override
    public String getTitle() {
        return driver.getTitle();
    }

    //@Override
    public void currentLocation() {
        log.info("*************************************************************");
        log.info("driver.getCurrentUrl: {}", driver.getCurrentUrl());
//        log.info("current source: {}", driver.getPageSource());
        log.info("*************************************************************");
    }

    //-----------------------------------------------------------------------//

    //@Override
    public boolean validate() {

        boolean result = true;

        log.info("*************************************************************");
        log.info("validate()");
        log.info("*************************************************************");

        log.info("pageTitle: {}", getTitle());
        // EventManager - Login

        log.info("chapterHeading: {}", chapterHeading.getText());
        //Login to the Event Manager

        log.info("summary: {}", summary.getText());
        // Enter credentials below:

        log.info("*************************************************************");

        return result;
    }


//    @Override
    public void navigateTo() {
        log.info("navigateTo( {} )", URL);
        driver.get(URL);
        currentLocation();
    }


    //@Override
    public static <T> T to(WebDriver driver) {

        LoginPage page = PageFactory.initElements(driver, LoginPage.class);

        return (T) page;
    }


    // Setter / Getter generated by Lombok

} // The End...
