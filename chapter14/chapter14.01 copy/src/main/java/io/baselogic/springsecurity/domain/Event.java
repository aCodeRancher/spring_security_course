package io.baselogic.springsecurity.domain;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import org.springframework.data.annotation.Id;
import org.springframework.data.relational.core.mapping.Column;
import org.springframework.data.relational.core.mapping.Table;

import java.io.Serializable;
import java.time.LocalDateTime;
import java.util.Calendar;

/**
 * An {@link Event} is an item that contains an owner (the person who created it), an attendee
 * (someone who was invited to the event), when the event will occur, a summary, and a description. For simplicity, all
 * fields are required.
 *
 * @author mickknutson
 *
 */
// JPA Annotations:
@Table(value = "events")

// Lombok Annotations:
@Data
@Builder
@AllArgsConstructor
@NoArgsConstructor
public class Event implements Serializable {

    @Id
    private Integer id;

    private String summary;

    private String description;

    @Column(value="event_date")
    private LocalDateTime when;


//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name="owner", referencedColumnName="id")
    private AppUser owner;

//    @ManyToOne(fetch = FetchType.LAZY)
//    @JoinColumn(name="attendee", referencedColumnName="id")
    private AppUser attendee;


    // Setter / Getter generated by Lombok

} // The End...
